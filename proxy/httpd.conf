# This is the httpd configuration for the host-wide reverse proxy server optimized for its proxy role. 
# It proxies both http and https requests, and forwards on all requests with http to local ports.
#   (Forwarding to other server instances within the private network is easily envisioned.)
# It registers a set of virtual hosts and a top-level location match to identify the target.
# It requires the following definitions from the environment (not including Apache configuration)
# ADMIN_HOME - the location of the administrator's home directory where all the web hosting hints are
# WEBHOST_DOMAIN - the base domain name which will represent the web host itself
# These definitions are to be obtained from /etc/webhost.env.sh

Include ${ADMIN_HOME}/etc/httpd.common.conf

LoadModule rewrite_module ${APACHE_MODDIR}/mod_rewrite.so
LoadModule proxy_module ${APACHE_MODDIR}/mod_proxy.so
LoadModule proxy_http_module ${APACHE_MODDIR}/mod_proxy_http.so
LoadModule remoteip_module ${APACHE_MODDIR}/mod_remoteip.so
LoadModule proxy_html_module ${APACHE_MODDIR}/mod_proxy_html.so
ProxyHTMLLinks  a               href
ProxyHTMLLinks  area            href
ProxyHTMLLinks  link            href
ProxyHTMLLinks  img             src longdesc usemap
ProxyHTMLLinks  object          classid codebase data usemap
ProxyHTMLLinks  q               cite
ProxyHTMLLinks  blockquote      cite
ProxyHTMLLinks  ins             cite
ProxyHTMLLinks  del             cite
ProxyHTMLLinks  form            action
ProxyHTMLLinks  input           src usemap
ProxyHTMLLinks  head            profile
ProxyHTMLLinks  base            href
ProxyHTMLLinks  script          src for

# The following handle i18n somehow for the html parsing ops
LoadModule xml2enc_module ${APACHE_MODDIR}/mod_xml2enc.so
xml2EncDefault utf8

LoadModule speling_module ${APACHE_MODDIR}/mod_speling.so
	CheckSpelling on

LoadModule autoindex_module ${APACHE_MODDIR}/mod_autoindex.so
LoadModule headers_module ${APACHE_MODDIR}/mod_headers.so

ProxyRequests Off
ProxyAddHeaders On
RewriteEngine On
Options SymLinksIfOwnerMatch
# The preceding two lines must go together to avoid a weird auth issue

DocumentRoot ${ADMIN_HOME}/proxy/docroot
<Directory ${ADMIN_HOME}/proxy/docroot>
	DirectoryIndex disabled default.html
	Require all granted
	AllowOverride None
	AllowOverrideList None
</Directory>

Listen ${APACHE_PORT} http
Listen ${APACHE_SECPORT} https

LoadModule ssl_module ${APACHE_MODDIR}/mod_ssl.so

LoadModule socache_shmcb_module ${APACHE_MODDIR}/mod_socache_shmcb.so
# An SSL Session Cache is a vital performance enhancement.
SSLSessionCache shmcb:sslSessionCache.shm(512000)

# Client certs include the account CA in the chain, so we just need to validate to the master.
SSLCACertificateFile "${ADMIN_HOME}/etc/master.ca.pem"
# The following could be used to accept any public CA's validation. But what good is that?
SSLCACertificatePath ${APACHE_CACERTS_PATH}

# Client keys must have been signed directly by the account CA without intermediaries.
SSLVerifyDepth 2

# Any SSL verification condition which fails is sufficient to fail the request.
SSLOptions StrictRequire

# SSL Name-based VHosting requires the SNI convention. By being strict we may require modern
# browser versions. See https://wiki.apache.org/httpd/NameBasedSSLVHostsWithSNI
SSLStrictSNIVHostCheck on

# This simplifies the Client cert verification steps based on OU
Define OU "%{SSL_CLIENT_S_DN_OU_"

# local.conf is not a member of the VC branch, but contains configurations specific to the host.
# It should at least be used as an accumulator of each of the locally registered accounts to proxy. 
Include "${ADMIN_HOME}/proxy/local.conf"

